"""Add team and role system

Revision ID: d145cb780110
Revises: 20240819_add_escalation_models
Create Date: 2025-08-22 14:39:40.682897

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd145cb780110'
down_revision = '20240819_add_escalation_models'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the UserRole enum type
    userrole = postgresql.ENUM('USER', 'ONCALL_ENGINEER', 'TEAM_LEAD', 'MANAGER', 'VP', 'CTO', 'ADMIN', name='userrole')
    userrole.create(op.get_bind())
    
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_teams_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_teams_name'), ['name'], unique=True)

    with op.batch_alter_table('incidents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('team_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'teams', ['team_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('team_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('role', userrole, nullable=False, server_default='USER'))
        batch_op.create_foreign_key(None, 'teams', ['team_id'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('role')
        batch_op.drop_column('team_id')

    with op.batch_alter_table('incidents', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('team_id')

    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_teams_name'))
        batch_op.drop_index(batch_op.f('ix_teams_id'))

    op.drop_table('teams')
    
    # Drop the UserRole enum type
    userrole = postgresql.ENUM(name='userrole')
    userrole.drop(op.get_bind())
    # ### end Alembic commands ###
